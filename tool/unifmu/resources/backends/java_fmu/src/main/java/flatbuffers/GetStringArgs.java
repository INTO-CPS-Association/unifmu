// automatically generated by the FlatBuffers compiler, do not modify

package flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GetStringArgs extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static GetStringArgs getRootAsGetStringArgs(ByteBuffer _bb) { return getRootAsGetStringArgs(_bb, new GetStringArgs()); }
  public static GetStringArgs getRootAsGetStringArgs(ByteBuffer _bb, GetStringArgs obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GetStringArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int references(int j) { int o = __offset(4); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int referencesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public IntVector referencesVector() { return referencesVector(new IntVector()); }
  public IntVector referencesVector(IntVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer referencesAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public ByteBuffer referencesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 4); }

  public static int createGetStringArgs(FlatBufferBuilder builder,
      int referencesOffset) {
    builder.startTable(1);
    GetStringArgs.addReferences(builder, referencesOffset);
    return GetStringArgs.endGetStringArgs(builder);
  }

  public static void startGetStringArgs(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addReferences(FlatBufferBuilder builder, int referencesOffset) { builder.addOffset(0, referencesOffset, 0); }
  public static int createReferencesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startReferencesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGetStringArgs(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // references
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GetStringArgs get(int j) { return get(new GetStringArgs(), j); }
    public GetStringArgs get(GetStringArgs obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

