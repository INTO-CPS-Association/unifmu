// automatically generated by the FlatBuffers compiler, do not modify

package flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SetStringArgs extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static SetStringArgs getRootAsSetStringArgs(ByteBuffer _bb) { return getRootAsSetStringArgs(_bb, new SetStringArgs()); }
  public static SetStringArgs getRootAsSetStringArgs(ByteBuffer _bb, SetStringArgs obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SetStringArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int references(int j) { int o = __offset(4); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int referencesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public IntVector referencesVector() { return referencesVector(new IntVector()); }
  public IntVector referencesVector(IntVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer referencesAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public ByteBuffer referencesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 4); }
  public String values(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int valuesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector valuesVector() { return valuesVector(new StringVector()); }
  public StringVector valuesVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createSetStringArgs(FlatBufferBuilder builder,
      int referencesOffset,
      int valuesOffset) {
    builder.startTable(2);
    SetStringArgs.addValues(builder, valuesOffset);
    SetStringArgs.addReferences(builder, referencesOffset);
    return SetStringArgs.endSetStringArgs(builder);
  }

  public static void startSetStringArgs(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addReferences(FlatBufferBuilder builder, int referencesOffset) { builder.addOffset(0, referencesOffset, 0); }
  public static int createReferencesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startReferencesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addValues(FlatBufferBuilder builder, int valuesOffset) { builder.addOffset(1, valuesOffset, 0); }
  public static int createValuesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startValuesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSetStringArgs(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // references
    builder.required(o, 6);  // values
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SetStringArgs get(int j) { return get(new SetStringArgs(), j); }
    public SetStringArgs get(SetStringArgs obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

