// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace flatbuffers
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum Fmi2CommandArg : byte
{
  NONE = 0,
  SetDebugLoggingArgs = 1,
  SetupExperimentArgs = 2,
  FreeInstanceArgs = 3,
  EnterInitializationModeArgs = 4,
  ExitInitializationModeArgs = 5,
  TerminateArgs = 6,
  ResetArgs = 7,
  SetRealArgs = 8,
  SetIntegerArgs = 9,
  SetBooleanArgs = 10,
  SetStringArgs = 11,
  GetRealArgs = 12,
  GetIntegerArgs = 13,
  GetBooleanArgs = 14,
  GetStringArgs = 15,
  SerializeArgs = 16,
  DeserializeArgs = 17,
  GetDirectionalDerivativesArgs = 18,
  SetInputDerivativesArgs = 19,
  GetOutputDerivitivesArgs = 20,
  DoStepArgs = 21,
  CancelStepArgs = 22,
  GetXXXStatusArgs = 23,
};

public enum Fmi2Status : int
{
  Ok = 0,
  Warning = 1,
  Discard = 2,
  Error = 3,
  Fatal = 4,
  Pending = 5,
};

public struct SetDebugLoggingArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetDebugLoggingArgs GetRootAsSetDebugLoggingArgs(ByteBuffer _bb) { return GetRootAsSetDebugLoggingArgs(_bb, new SetDebugLoggingArgs()); }
  public static SetDebugLoggingArgs GetRootAsSetDebugLoggingArgs(ByteBuffer _bb, SetDebugLoggingArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetDebugLoggingArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Categories(int j) { int o = __p.__offset(4); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CategoriesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool LoggingOn { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<flatbuffers.SetDebugLoggingArgs> CreateSetDebugLoggingArgs(FlatBufferBuilder builder,
      VectorOffset categoriesOffset = default(VectorOffset),
      bool logging_on = false) {
    builder.StartTable(2);
    SetDebugLoggingArgs.AddCategories(builder, categoriesOffset);
    SetDebugLoggingArgs.AddLoggingOn(builder, logging_on);
    return SetDebugLoggingArgs.EndSetDebugLoggingArgs(builder);
  }

  public static void StartSetDebugLoggingArgs(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCategories(FlatBufferBuilder builder, VectorOffset categoriesOffset) { builder.AddOffset(0, categoriesOffset.Value, 0); }
  public static VectorOffset CreateCategoriesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCategoriesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCategoriesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLoggingOn(FlatBufferBuilder builder, bool loggingOn) { builder.AddBool(1, loggingOn, false); }
  public static Offset<flatbuffers.SetDebugLoggingArgs> EndSetDebugLoggingArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.SetDebugLoggingArgs>(o);
  }
};

public struct FreeInstanceArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FreeInstanceArgs GetRootAsFreeInstanceArgs(ByteBuffer _bb) { return GetRootAsFreeInstanceArgs(_bb, new FreeInstanceArgs()); }
  public static FreeInstanceArgs GetRootAsFreeInstanceArgs(ByteBuffer _bb, FreeInstanceArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FreeInstanceArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartFreeInstanceArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.FreeInstanceArgs> EndFreeInstanceArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.FreeInstanceArgs>(o);
  }
};

public struct EnterInitializationModeArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EnterInitializationModeArgs GetRootAsEnterInitializationModeArgs(ByteBuffer _bb) { return GetRootAsEnterInitializationModeArgs(_bb, new EnterInitializationModeArgs()); }
  public static EnterInitializationModeArgs GetRootAsEnterInitializationModeArgs(ByteBuffer _bb, EnterInitializationModeArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EnterInitializationModeArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartEnterInitializationModeArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.EnterInitializationModeArgs> EndEnterInitializationModeArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.EnterInitializationModeArgs>(o);
  }
};

public struct ExitInitializationModeArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ExitInitializationModeArgs GetRootAsExitInitializationModeArgs(ByteBuffer _bb) { return GetRootAsExitInitializationModeArgs(_bb, new ExitInitializationModeArgs()); }
  public static ExitInitializationModeArgs GetRootAsExitInitializationModeArgs(ByteBuffer _bb, ExitInitializationModeArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ExitInitializationModeArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartExitInitializationModeArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.ExitInitializationModeArgs> EndExitInitializationModeArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.ExitInitializationModeArgs>(o);
  }
};

public struct TerminateArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static TerminateArgs GetRootAsTerminateArgs(ByteBuffer _bb) { return GetRootAsTerminateArgs(_bb, new TerminateArgs()); }
  public static TerminateArgs GetRootAsTerminateArgs(ByteBuffer _bb, TerminateArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TerminateArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartTerminateArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.TerminateArgs> EndTerminateArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.TerminateArgs>(o);
  }
};

public struct ResetArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ResetArgs GetRootAsResetArgs(ByteBuffer _bb) { return GetRootAsResetArgs(_bb, new ResetArgs()); }
  public static ResetArgs GetRootAsResetArgs(ByteBuffer _bb, ResetArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ResetArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartResetArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.ResetArgs> EndResetArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.ResetArgs>(o);
  }
};

public struct SetupExperimentArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetupExperimentArgs GetRootAsSetupExperimentArgs(ByteBuffer _bb) { return GetRootAsSetupExperimentArgs(_bb, new SetupExperimentArgs()); }
  public static SetupExperimentArgs GetRootAsSetupExperimentArgs(ByteBuffer _bb, SetupExperimentArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetupExperimentArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double StartTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double StopTime { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Tolerance { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public bool HasStopTime { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool HasTolerance { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<flatbuffers.SetupExperimentArgs> CreateSetupExperimentArgs(FlatBufferBuilder builder,
      double start_time = 0.0,
      double stop_time = 0.0,
      double tolerance = 0.0,
      bool has_stop_time = false,
      bool has_tolerance = false) {
    builder.StartTable(5);
    SetupExperimentArgs.AddTolerance(builder, tolerance);
    SetupExperimentArgs.AddStopTime(builder, stop_time);
    SetupExperimentArgs.AddStartTime(builder, start_time);
    SetupExperimentArgs.AddHasTolerance(builder, has_tolerance);
    SetupExperimentArgs.AddHasStopTime(builder, has_stop_time);
    return SetupExperimentArgs.EndSetupExperimentArgs(builder);
  }

  public static void StartSetupExperimentArgs(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddStartTime(FlatBufferBuilder builder, double startTime) { builder.AddDouble(0, startTime, 0.0); }
  public static void AddStopTime(FlatBufferBuilder builder, double stopTime) { builder.AddDouble(1, stopTime, 0.0); }
  public static void AddTolerance(FlatBufferBuilder builder, double tolerance) { builder.AddDouble(2, tolerance, 0.0); }
  public static void AddHasStopTime(FlatBufferBuilder builder, bool hasStopTime) { builder.AddBool(3, hasStopTime, false); }
  public static void AddHasTolerance(FlatBufferBuilder builder, bool hasTolerance) { builder.AddBool(4, hasTolerance, false); }
  public static Offset<flatbuffers.SetupExperimentArgs> EndSetupExperimentArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.SetupExperimentArgs>(o);
  }
};

public struct SetRealArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetRealArgs GetRootAsSetRealArgs(ByteBuffer _bb) { return GetRootAsSetRealArgs(_bb, new SetRealArgs()); }
  public static SetRealArgs GetRootAsSetRealArgs(ByteBuffer _bb, SetRealArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetRealArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }
  public double Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetValuesBytes() { return __p.__vector_as_span<double>(6, 8); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public double[] GetValuesArray() { return __p.__vector_as_array<double>(6); }

  public static Offset<flatbuffers.SetRealArgs> CreateSetRealArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset),
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SetRealArgs.AddValues(builder, valuesOffset);
    SetRealArgs.AddReferences(builder, referencesOffset);
    return SetRealArgs.EndSetRealArgs(builder);
  }

  public static void StartSetRealArgs(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<flatbuffers.SetRealArgs> EndSetRealArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    builder.Required(o, 6);  // values
    return new Offset<flatbuffers.SetRealArgs>(o);
  }
};

public struct SetIntegerArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetIntegerArgs GetRootAsSetIntegerArgs(ByteBuffer _bb) { return GetRootAsSetIntegerArgs(_bb, new SetIntegerArgs()); }
  public static SetIntegerArgs GetRootAsSetIntegerArgs(ByteBuffer _bb, SetIntegerArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetIntegerArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }
  public int Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetValuesBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetValuesArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<flatbuffers.SetIntegerArgs> CreateSetIntegerArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset),
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SetIntegerArgs.AddValues(builder, valuesOffset);
    SetIntegerArgs.AddReferences(builder, referencesOffset);
    return SetIntegerArgs.EndSetIntegerArgs(builder);
  }

  public static void StartSetIntegerArgs(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.SetIntegerArgs> EndSetIntegerArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    builder.Required(o, 6);  // values
    return new Offset<flatbuffers.SetIntegerArgs>(o);
  }
};

public struct SetBooleanArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetBooleanArgs GetRootAsSetBooleanArgs(ByteBuffer _bb) { return GetRootAsSetBooleanArgs(_bb, new SetBooleanArgs()); }
  public static SetBooleanArgs GetRootAsSetBooleanArgs(ByteBuffer _bb, SetBooleanArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetBooleanArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }
  public bool Values(int j) { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(__p.__vector(o) + j * 1) : false; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<bool> GetValuesBytes() { return __p.__vector_as_span<bool>(6, 1); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public bool[] GetValuesArray() { return __p.__vector_as_array<bool>(6); }

  public static Offset<flatbuffers.SetBooleanArgs> CreateSetBooleanArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset),
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SetBooleanArgs.AddValues(builder, valuesOffset);
    SetBooleanArgs.AddReferences(builder, referencesOffset);
    return SetBooleanArgs.EndSetBooleanArgs(builder);
  }

  public static void StartSetBooleanArgs(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddBool(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<flatbuffers.SetBooleanArgs> EndSetBooleanArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    builder.Required(o, 6);  // values
    return new Offset<flatbuffers.SetBooleanArgs>(o);
  }
};

public struct SetStringArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetStringArgs GetRootAsSetStringArgs(ByteBuffer _bb) { return GetRootAsSetStringArgs(_bb, new SetStringArgs()); }
  public static SetStringArgs GetRootAsSetStringArgs(ByteBuffer _bb, SetStringArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetStringArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }
  public string Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<flatbuffers.SetStringArgs> CreateSetStringArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset),
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SetStringArgs.AddValues(builder, valuesOffset);
    SetStringArgs.AddReferences(builder, referencesOffset);
    return SetStringArgs.EndSetStringArgs(builder);
  }

  public static void StartSetStringArgs(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.SetStringArgs> EndSetStringArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    builder.Required(o, 6);  // values
    return new Offset<flatbuffers.SetStringArgs>(o);
  }
};

public struct GetRealArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetRealArgs GetRootAsGetRealArgs(ByteBuffer _bb) { return GetRootAsGetRealArgs(_bb, new GetRealArgs()); }
  public static GetRealArgs GetRootAsGetRealArgs(ByteBuffer _bb, GetRealArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetRealArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<flatbuffers.GetRealArgs> CreateGetRealArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    GetRealArgs.AddReferences(builder, referencesOffset);
    return GetRealArgs.EndGetRealArgs(builder);
  }

  public static void StartGetRealArgs(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetRealArgs> EndGetRealArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    return new Offset<flatbuffers.GetRealArgs>(o);
  }
};

public struct GetIntegerArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetIntegerArgs GetRootAsGetIntegerArgs(ByteBuffer _bb) { return GetRootAsGetIntegerArgs(_bb, new GetIntegerArgs()); }
  public static GetIntegerArgs GetRootAsGetIntegerArgs(ByteBuffer _bb, GetIntegerArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetIntegerArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<flatbuffers.GetIntegerArgs> CreateGetIntegerArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    GetIntegerArgs.AddReferences(builder, referencesOffset);
    return GetIntegerArgs.EndGetIntegerArgs(builder);
  }

  public static void StartGetIntegerArgs(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetIntegerArgs> EndGetIntegerArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    return new Offset<flatbuffers.GetIntegerArgs>(o);
  }
};

public struct GetBooleanArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetBooleanArgs GetRootAsGetBooleanArgs(ByteBuffer _bb) { return GetRootAsGetBooleanArgs(_bb, new GetBooleanArgs()); }
  public static GetBooleanArgs GetRootAsGetBooleanArgs(ByteBuffer _bb, GetBooleanArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetBooleanArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<flatbuffers.GetBooleanArgs> CreateGetBooleanArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    GetBooleanArgs.AddReferences(builder, referencesOffset);
    return GetBooleanArgs.EndGetBooleanArgs(builder);
  }

  public static void StartGetBooleanArgs(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetBooleanArgs> EndGetBooleanArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    return new Offset<flatbuffers.GetBooleanArgs>(o);
  }
};

public struct GetStringArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetStringArgs GetRootAsGetStringArgs(ByteBuffer _bb) { return GetRootAsGetStringArgs(_bb, new GetStringArgs()); }
  public static GetStringArgs GetRootAsGetStringArgs(ByteBuffer _bb, GetStringArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetStringArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int References(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ReferencesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetReferencesBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetReferencesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetReferencesArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<flatbuffers.GetStringArgs> CreateGetStringArgs(FlatBufferBuilder builder,
      VectorOffset referencesOffset = default(VectorOffset)) {
    builder.StartTable(1);
    GetStringArgs.AddReferences(builder, referencesOffset);
    return GetStringArgs.EndGetStringArgs(builder);
  }

  public static void StartGetStringArgs(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReferences(FlatBufferBuilder builder, VectorOffset referencesOffset) { builder.AddOffset(0, referencesOffset.Value, 0); }
  public static VectorOffset CreateReferencesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateReferencesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartReferencesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetStringArgs> EndGetStringArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // references
    return new Offset<flatbuffers.GetStringArgs>(o);
  }
};

public struct SerializeArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SerializeArgs GetRootAsSerializeArgs(ByteBuffer _bb) { return GetRootAsSerializeArgs(_bb, new SerializeArgs()); }
  public static SerializeArgs GetRootAsSerializeArgs(ByteBuffer _bb, SerializeArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SerializeArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSerializeArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.SerializeArgs> EndSerializeArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.SerializeArgs>(o);
  }
};

public struct DeserializeArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static DeserializeArgs GetRootAsDeserializeArgs(ByteBuffer _bb) { return GetRootAsDeserializeArgs(_bb, new DeserializeArgs()); }
  public static DeserializeArgs GetRootAsDeserializeArgs(ByteBuffer _bb, DeserializeArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DeserializeArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte State(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int StateLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetStateBytes() { return __p.__vector_as_span<sbyte>(4, 1); }
#else
  public ArraySegment<byte>? GetStateBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public sbyte[] GetStateArray() { return __p.__vector_as_array<sbyte>(4); }

  public static Offset<flatbuffers.DeserializeArgs> CreateDeserializeArgs(FlatBufferBuilder builder,
      VectorOffset stateOffset = default(VectorOffset)) {
    builder.StartTable(1);
    DeserializeArgs.AddState(builder, stateOffset);
    return DeserializeArgs.EndDeserializeArgs(builder);
  }

  public static void StartDeserializeArgs(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddState(FlatBufferBuilder builder, VectorOffset stateOffset) { builder.AddOffset(0, stateOffset.Value, 0); }
  public static VectorOffset CreateStateVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateStateVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartStateVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<flatbuffers.DeserializeArgs> EndDeserializeArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // state
    return new Offset<flatbuffers.DeserializeArgs>(o);
  }
};

public struct GetDirectionalDerivativesArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetDirectionalDerivativesArgs GetRootAsGetDirectionalDerivativesArgs(ByteBuffer _bb) { return GetRootAsGetDirectionalDerivativesArgs(_bb, new GetDirectionalDerivativesArgs()); }
  public static GetDirectionalDerivativesArgs GetRootAsGetDirectionalDerivativesArgs(ByteBuffer _bb, GetDirectionalDerivativesArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetDirectionalDerivativesArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartGetDirectionalDerivativesArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.GetDirectionalDerivativesArgs> EndGetDirectionalDerivativesArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetDirectionalDerivativesArgs>(o);
  }
};

public struct SetInputDerivativesArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SetInputDerivativesArgs GetRootAsSetInputDerivativesArgs(ByteBuffer _bb) { return GetRootAsSetInputDerivativesArgs(_bb, new SetInputDerivativesArgs()); }
  public static SetInputDerivativesArgs GetRootAsSetInputDerivativesArgs(ByteBuffer _bb, SetInputDerivativesArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SetInputDerivativesArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSetInputDerivativesArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.SetInputDerivativesArgs> EndSetInputDerivativesArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.SetInputDerivativesArgs>(o);
  }
};

public struct GetOutputDerivitivesArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetOutputDerivitivesArgs GetRootAsGetOutputDerivitivesArgs(ByteBuffer _bb) { return GetRootAsGetOutputDerivitivesArgs(_bb, new GetOutputDerivitivesArgs()); }
  public static GetOutputDerivitivesArgs GetRootAsGetOutputDerivitivesArgs(ByteBuffer _bb, GetOutputDerivitivesArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetOutputDerivitivesArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartGetOutputDerivitivesArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.GetOutputDerivitivesArgs> EndGetOutputDerivitivesArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetOutputDerivitivesArgs>(o);
  }
};

public struct DoStepArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static DoStepArgs GetRootAsDoStepArgs(ByteBuffer _bb) { return GetRootAsDoStepArgs(_bb, new DoStepArgs()); }
  public static DoStepArgs GetRootAsDoStepArgs(ByteBuffer _bb, DoStepArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DoStepArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double CurrentTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double StepSize { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public bool NoStepPrior { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<flatbuffers.DoStepArgs> CreateDoStepArgs(FlatBufferBuilder builder,
      double current_time = 0.0,
      double step_size = 0.0,
      bool no_step_prior = false) {
    builder.StartTable(3);
    DoStepArgs.AddStepSize(builder, step_size);
    DoStepArgs.AddCurrentTime(builder, current_time);
    DoStepArgs.AddNoStepPrior(builder, no_step_prior);
    return DoStepArgs.EndDoStepArgs(builder);
  }

  public static void StartDoStepArgs(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddCurrentTime(FlatBufferBuilder builder, double currentTime) { builder.AddDouble(0, currentTime, 0.0); }
  public static void AddStepSize(FlatBufferBuilder builder, double stepSize) { builder.AddDouble(1, stepSize, 0.0); }
  public static void AddNoStepPrior(FlatBufferBuilder builder, bool noStepPrior) { builder.AddBool(2, noStepPrior, false); }
  public static Offset<flatbuffers.DoStepArgs> EndDoStepArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.DoStepArgs>(o);
  }
};

public struct CancelStepArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CancelStepArgs GetRootAsCancelStepArgs(ByteBuffer _bb) { return GetRootAsCancelStepArgs(_bb, new CancelStepArgs()); }
  public static CancelStepArgs GetRootAsCancelStepArgs(ByteBuffer _bb, CancelStepArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CancelStepArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCancelStepArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.CancelStepArgs> EndCancelStepArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.CancelStepArgs>(o);
  }
};

public struct GetXXXStatusArgs : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetXXXStatusArgs GetRootAsGetXXXStatusArgs(ByteBuffer _bb) { return GetRootAsGetXXXStatusArgs(_bb, new GetXXXStatusArgs()); }
  public static GetXXXStatusArgs GetRootAsGetXXXStatusArgs(ByteBuffer _bb, GetXXXStatusArgs obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetXXXStatusArgs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartGetXXXStatusArgs(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<flatbuffers.GetXXXStatusArgs> EndGetXXXStatusArgs(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetXXXStatusArgs>(o);
  }
};

public struct FMI2Command : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FMI2Command GetRootAsFMI2Command(ByteBuffer _bb) { return GetRootAsFMI2Command(_bb, new FMI2Command()); }
  public static FMI2Command GetRootAsFMI2Command(ByteBuffer _bb, FMI2Command obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FMI2Command __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2CommandArg ArgsType { get { int o = __p.__offset(4); return o != 0 ? (flatbuffers.Fmi2CommandArg)__p.bb.Get(o + __p.bb_pos) : flatbuffers.Fmi2CommandArg.NONE; } }
  public TTable? Args<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public flatbuffers.SetDebugLoggingArgs ArgsAsSetDebugLoggingArgs() { return Args<flatbuffers.SetDebugLoggingArgs>().Value; }
  public flatbuffers.SetupExperimentArgs ArgsAsSetupExperimentArgs() { return Args<flatbuffers.SetupExperimentArgs>().Value; }
  public flatbuffers.FreeInstanceArgs ArgsAsFreeInstanceArgs() { return Args<flatbuffers.FreeInstanceArgs>().Value; }
  public flatbuffers.EnterInitializationModeArgs ArgsAsEnterInitializationModeArgs() { return Args<flatbuffers.EnterInitializationModeArgs>().Value; }
  public flatbuffers.ExitInitializationModeArgs ArgsAsExitInitializationModeArgs() { return Args<flatbuffers.ExitInitializationModeArgs>().Value; }
  public flatbuffers.TerminateArgs ArgsAsTerminateArgs() { return Args<flatbuffers.TerminateArgs>().Value; }
  public flatbuffers.ResetArgs ArgsAsResetArgs() { return Args<flatbuffers.ResetArgs>().Value; }
  public flatbuffers.SetRealArgs ArgsAsSetRealArgs() { return Args<flatbuffers.SetRealArgs>().Value; }
  public flatbuffers.SetIntegerArgs ArgsAsSetIntegerArgs() { return Args<flatbuffers.SetIntegerArgs>().Value; }
  public flatbuffers.SetBooleanArgs ArgsAsSetBooleanArgs() { return Args<flatbuffers.SetBooleanArgs>().Value; }
  public flatbuffers.SetStringArgs ArgsAsSetStringArgs() { return Args<flatbuffers.SetStringArgs>().Value; }
  public flatbuffers.GetRealArgs ArgsAsGetRealArgs() { return Args<flatbuffers.GetRealArgs>().Value; }
  public flatbuffers.GetIntegerArgs ArgsAsGetIntegerArgs() { return Args<flatbuffers.GetIntegerArgs>().Value; }
  public flatbuffers.GetBooleanArgs ArgsAsGetBooleanArgs() { return Args<flatbuffers.GetBooleanArgs>().Value; }
  public flatbuffers.GetStringArgs ArgsAsGetStringArgs() { return Args<flatbuffers.GetStringArgs>().Value; }
  public flatbuffers.SerializeArgs ArgsAsSerializeArgs() { return Args<flatbuffers.SerializeArgs>().Value; }
  public flatbuffers.DeserializeArgs ArgsAsDeserializeArgs() { return Args<flatbuffers.DeserializeArgs>().Value; }
  public flatbuffers.GetDirectionalDerivativesArgs ArgsAsGetDirectionalDerivativesArgs() { return Args<flatbuffers.GetDirectionalDerivativesArgs>().Value; }
  public flatbuffers.SetInputDerivativesArgs ArgsAsSetInputDerivativesArgs() { return Args<flatbuffers.SetInputDerivativesArgs>().Value; }
  public flatbuffers.GetOutputDerivitivesArgs ArgsAsGetOutputDerivitivesArgs() { return Args<flatbuffers.GetOutputDerivitivesArgs>().Value; }
  public flatbuffers.DoStepArgs ArgsAsDoStepArgs() { return Args<flatbuffers.DoStepArgs>().Value; }
  public flatbuffers.CancelStepArgs ArgsAsCancelStepArgs() { return Args<flatbuffers.CancelStepArgs>().Value; }
  public flatbuffers.GetXXXStatusArgs ArgsAsGetXXXStatusArgs() { return Args<flatbuffers.GetXXXStatusArgs>().Value; }

  public static Offset<flatbuffers.FMI2Command> CreateFMI2Command(FlatBufferBuilder builder,
      flatbuffers.Fmi2CommandArg args_type = flatbuffers.Fmi2CommandArg.NONE,
      int argsOffset = 0) {
    builder.StartTable(2);
    FMI2Command.AddArgs(builder, argsOffset);
    FMI2Command.AddArgsType(builder, args_type);
    return FMI2Command.EndFMI2Command(builder);
  }

  public static void StartFMI2Command(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddArgsType(FlatBufferBuilder builder, flatbuffers.Fmi2CommandArg argsType) { builder.AddByte(0, (byte)argsType, 0); }
  public static void AddArgs(FlatBufferBuilder builder, int argsOffset) { builder.AddOffset(1, argsOffset, 0); }
  public static Offset<flatbuffers.FMI2Command> EndFMI2Command(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.FMI2Command>(o);
  }
  public static void FinishFMI2CommandBuffer(FlatBufferBuilder builder, Offset<flatbuffers.FMI2Command> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedFMI2CommandBuffer(FlatBufferBuilder builder, Offset<flatbuffers.FMI2Command> offset) { builder.FinishSizePrefixed(offset.Value); }
};

public struct StatusReturn : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public StatusReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2Status Status { get { return (flatbuffers.Fmi2Status)__p.bb.GetInt(__p.bb_pos + 0); } }

  public static Offset<flatbuffers.StatusReturn> CreateStatusReturn(FlatBufferBuilder builder, flatbuffers.Fmi2Status Status) {
    builder.Prep(4, 4);
    builder.PutInt((int)Status);
    return new Offset<flatbuffers.StatusReturn>(builder.Offset);
  }
};

public struct GetRealReturn : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetRealReturn GetRootAsGetRealReturn(ByteBuffer _bb) { return GetRootAsGetRealReturn(_bb, new GetRealReturn()); }
  public static GetRealReturn GetRootAsGetRealReturn(ByteBuffer _bb, GetRealReturn obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetRealReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2Status Status { get { int o = __p.__offset(4); return o != 0 ? (flatbuffers.Fmi2Status)__p.bb.GetInt(o + __p.bb_pos) : flatbuffers.Fmi2Status.Ok; } }
  public double Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetValuesBytes() { return __p.__vector_as_span<double>(6, 8); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public double[] GetValuesArray() { return __p.__vector_as_array<double>(6); }

  public static Offset<flatbuffers.GetRealReturn> CreateGetRealReturn(FlatBufferBuilder builder,
      flatbuffers.Fmi2Status status = flatbuffers.Fmi2Status.Ok,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    GetRealReturn.AddValues(builder, valuesOffset);
    GetRealReturn.AddStatus(builder, status);
    return GetRealReturn.EndGetRealReturn(builder);
  }

  public static void StartGetRealReturn(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStatus(FlatBufferBuilder builder, flatbuffers.Fmi2Status status) { builder.AddInt(0, (int)status, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<flatbuffers.GetRealReturn> EndGetRealReturn(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetRealReturn>(o);
  }
};

public struct GetIntegerReturn : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetIntegerReturn GetRootAsGetIntegerReturn(ByteBuffer _bb) { return GetRootAsGetIntegerReturn(_bb, new GetIntegerReturn()); }
  public static GetIntegerReturn GetRootAsGetIntegerReturn(ByteBuffer _bb, GetIntegerReturn obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetIntegerReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2Status Status { get { int o = __p.__offset(4); return o != 0 ? (flatbuffers.Fmi2Status)__p.bb.GetInt(o + __p.bb_pos) : flatbuffers.Fmi2Status.Ok; } }
  public int Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetValuesBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetValuesArray() { return __p.__vector_as_array<int>(6); }

  public static Offset<flatbuffers.GetIntegerReturn> CreateGetIntegerReturn(FlatBufferBuilder builder,
      flatbuffers.Fmi2Status status = flatbuffers.Fmi2Status.Ok,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    GetIntegerReturn.AddValues(builder, valuesOffset);
    GetIntegerReturn.AddStatus(builder, status);
    return GetIntegerReturn.EndGetIntegerReturn(builder);
  }

  public static void StartGetIntegerReturn(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStatus(FlatBufferBuilder builder, flatbuffers.Fmi2Status status) { builder.AddInt(0, (int)status, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetIntegerReturn> EndGetIntegerReturn(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetIntegerReturn>(o);
  }
};

public struct GetBooleanReturn : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetBooleanReturn GetRootAsGetBooleanReturn(ByteBuffer _bb) { return GetRootAsGetBooleanReturn(_bb, new GetBooleanReturn()); }
  public static GetBooleanReturn GetRootAsGetBooleanReturn(ByteBuffer _bb, GetBooleanReturn obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetBooleanReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2Status Status { get { int o = __p.__offset(4); return o != 0 ? (flatbuffers.Fmi2Status)__p.bb.GetInt(o + __p.bb_pos) : flatbuffers.Fmi2Status.Ok; } }
  public bool Values(int j) { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(__p.__vector(o) + j * 1) : false; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<bool> GetValuesBytes() { return __p.__vector_as_span<bool>(6, 1); }
#else
  public ArraySegment<byte>? GetValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public bool[] GetValuesArray() { return __p.__vector_as_array<bool>(6); }

  public static Offset<flatbuffers.GetBooleanReturn> CreateGetBooleanReturn(FlatBufferBuilder builder,
      flatbuffers.Fmi2Status status = flatbuffers.Fmi2Status.Ok,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    GetBooleanReturn.AddValues(builder, valuesOffset);
    GetBooleanReturn.AddStatus(builder, status);
    return GetBooleanReturn.EndGetBooleanReturn(builder);
  }

  public static void StartGetBooleanReturn(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStatus(FlatBufferBuilder builder, flatbuffers.Fmi2Status status) { builder.AddInt(0, (int)status, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddBool(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<flatbuffers.GetBooleanReturn> EndGetBooleanReturn(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetBooleanReturn>(o);
  }
};

public struct GetStringReturn : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GetStringReturn GetRootAsGetStringReturn(ByteBuffer _bb) { return GetRootAsGetStringReturn(_bb, new GetStringReturn()); }
  public static GetStringReturn GetRootAsGetStringReturn(ByteBuffer _bb, GetStringReturn obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetStringReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flatbuffers.Fmi2Status Status { get { int o = __p.__offset(4); return o != 0 ? (flatbuffers.Fmi2Status)__p.bb.GetInt(o + __p.bb_pos) : flatbuffers.Fmi2Status.Ok; } }
  public string Values(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<flatbuffers.GetStringReturn> CreateGetStringReturn(FlatBufferBuilder builder,
      flatbuffers.Fmi2Status status = flatbuffers.Fmi2Status.Ok,
      VectorOffset valuesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    GetStringReturn.AddValues(builder, valuesOffset);
    GetStringReturn.AddStatus(builder, status);
    return GetStringReturn.EndGetStringReturn(builder);
  }

  public static void StartGetStringReturn(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStatus(FlatBufferBuilder builder, flatbuffers.Fmi2Status status) { builder.AddInt(0, (int)status, 0); }
  public static void AddValues(FlatBufferBuilder builder, VectorOffset valuesOffset) { builder.AddOffset(1, valuesOffset.Value, 0); }
  public static VectorOffset CreateValuesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateValuesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<flatbuffers.GetStringReturn> EndGetStringReturn(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.GetStringReturn>(o);
  }
};

public struct SerializeReturn : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static SerializeReturn GetRootAsSerializeReturn(ByteBuffer _bb) { return GetRootAsSerializeReturn(_bb, new SerializeReturn()); }
  public static SerializeReturn GetRootAsSerializeReturn(ByteBuffer _bb, SerializeReturn obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SerializeReturn __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte State(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int StateLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetStateBytes() { return __p.__vector_as_span<sbyte>(4, 1); }
#else
  public ArraySegment<byte>? GetStateBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public sbyte[] GetStateArray() { return __p.__vector_as_array<sbyte>(4); }

  public static Offset<flatbuffers.SerializeReturn> CreateSerializeReturn(FlatBufferBuilder builder,
      VectorOffset stateOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SerializeReturn.AddState(builder, stateOffset);
    return SerializeReturn.EndSerializeReturn(builder);
  }

  public static void StartSerializeReturn(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddState(FlatBufferBuilder builder, VectorOffset stateOffset) { builder.AddOffset(0, stateOffset.Value, 0); }
  public static VectorOffset CreateStateVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateStateVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartStateVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<flatbuffers.SerializeReturn> EndSerializeReturn(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<flatbuffers.SerializeReturn>(o);
  }
};


}
