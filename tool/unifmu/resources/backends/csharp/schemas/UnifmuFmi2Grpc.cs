// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schemas/unifmu_fmi2.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace schemas.Fmi2Proto {
  /// <summary>
  ///// Only related to Handshake between wrapper and FMU ////
  /// </summary>
  public static partial class Handshaker
  {
    static readonly string __ServiceName = "fmi2_proto.Handshaker";

    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.HandshakeInfo> __Marshaller_fmi2_proto_HandshakeInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.HandshakeInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.Void> __Marshaller_fmi2_proto_Void = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.Void.Parser.ParseFrom);

    static readonly grpc::Method<global::schemas.Fmi2Proto.HandshakeInfo, global::schemas.Fmi2Proto.Void> __Method_PerformHandshake = new grpc::Method<global::schemas.Fmi2Proto.HandshakeInfo, global::schemas.Fmi2Proto.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PerformHandshake",
        __Marshaller_fmi2_proto_HandshakeInfo,
        __Marshaller_fmi2_proto_Void);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::schemas.Fmi2Proto.UnifmuFmi2Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Handshaker</summary>
    [grpc::BindServiceMethod(typeof(Handshaker), "BindService")]
    public abstract partial class HandshakerBase
    {
      /// <summary>
      /// Send a message for performing a handshake
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.Void> PerformHandshake(global::schemas.Fmi2Proto.HandshakeInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Handshaker</summary>
    public partial class HandshakerClient : grpc::ClientBase<HandshakerClient>
    {
      /// <summary>Creates a new client for Handshaker</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public HandshakerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Handshaker that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public HandshakerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected HandshakerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected HandshakerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Send a message for performing a handshake
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.Void PerformHandshake(global::schemas.Fmi2Proto.HandshakeInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformHandshake(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a message for performing a handshake
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.Void PerformHandshake(global::schemas.Fmi2Proto.HandshakeInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PerformHandshake, null, options, request);
      }
      /// <summary>
      /// Send a message for performing a handshake
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.Void> PerformHandshakeAsync(global::schemas.Fmi2Proto.HandshakeInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PerformHandshakeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a message for performing a handshake
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.Void> PerformHandshakeAsync(global::schemas.Fmi2Proto.HandshakeInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PerformHandshake, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override HandshakerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new HandshakerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(HandshakerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PerformHandshake, serviceImpl.PerformHandshake).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, HandshakerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PerformHandshake, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.HandshakeInfo, global::schemas.Fmi2Proto.Void>(serviceImpl.PerformHandshake));
    }

  }
  public static partial class SendCommand
  {
    static readonly string __ServiceName = "fmi2_proto.SendCommand";

    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetReal> __Marshaller_fmi2_proto_SetReal = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetReal.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.StatusReturn> __Marshaller_fmi2_proto_StatusReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.StatusReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.GetXXX> __Marshaller_fmi2_proto_GetXXX = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.GetXXX.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.GetRealReturn> __Marshaller_fmi2_proto_GetRealReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.GetRealReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetInteger> __Marshaller_fmi2_proto_SetInteger = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetInteger.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.GetIntegerReturn> __Marshaller_fmi2_proto_GetIntegerReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.GetIntegerReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetBoolean> __Marshaller_fmi2_proto_SetBoolean = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetBoolean.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.GetBooleanReturn> __Marshaller_fmi2_proto_GetBooleanReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.GetBooleanReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetString> __Marshaller_fmi2_proto_SetString = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetString.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.GetStringReturn> __Marshaller_fmi2_proto_GetStringReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.GetStringReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.EnterInitializationMode> __Marshaller_fmi2_proto_EnterInitializationMode = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.EnterInitializationMode.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.ExitInitializationMode> __Marshaller_fmi2_proto_ExitInitializationMode = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.ExitInitializationMode.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.Terminate> __Marshaller_fmi2_proto_Terminate = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.Terminate.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.Reset> __Marshaller_fmi2_proto_Reset = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.Reset.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetupExperiment> __Marshaller_fmi2_proto_SetupExperiment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetupExperiment.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.FreeInstance> __Marshaller_fmi2_proto_FreeInstance = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.FreeInstance.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SetDebugLogging> __Marshaller_fmi2_proto_SetDebugLogging = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SetDebugLogging.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.DoStep> __Marshaller_fmi2_proto_DoStep = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.DoStep.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.CancelStep> __Marshaller_fmi2_proto_CancelStep = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.CancelStep.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SerializeMessage> __Marshaller_fmi2_proto_SerializeMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SerializeMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.SerializeReturn> __Marshaller_fmi2_proto_SerializeReturn = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.SerializeReturn.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::schemas.Fmi2Proto.DeserializeMessage> __Marshaller_fmi2_proto_DeserializeMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::schemas.Fmi2Proto.DeserializeMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetReal, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetReal = new grpc::Method<global::schemas.Fmi2Proto.SetReal, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetReal",
        __Marshaller_fmi2_proto_SetReal,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetRealReturn> __Method_Fmi2GetReal = new grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetRealReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2GetReal",
        __Marshaller_fmi2_proto_GetXXX,
        __Marshaller_fmi2_proto_GetRealReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetInteger, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetInteger = new grpc::Method<global::schemas.Fmi2Proto.SetInteger, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetInteger",
        __Marshaller_fmi2_proto_SetInteger,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetIntegerReturn> __Method_Fmi2GetInteger = new grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetIntegerReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2GetInteger",
        __Marshaller_fmi2_proto_GetXXX,
        __Marshaller_fmi2_proto_GetIntegerReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetBoolean, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetBoolean = new grpc::Method<global::schemas.Fmi2Proto.SetBoolean, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetBoolean",
        __Marshaller_fmi2_proto_SetBoolean,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetBooleanReturn> __Method_Fmi2GetBoolean = new grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetBooleanReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2GetBoolean",
        __Marshaller_fmi2_proto_GetXXX,
        __Marshaller_fmi2_proto_GetBooleanReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetString, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetString = new grpc::Method<global::schemas.Fmi2Proto.SetString, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetString",
        __Marshaller_fmi2_proto_SetString,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetStringReturn> __Method_Fmi2GetString = new grpc::Method<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetStringReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2GetString",
        __Marshaller_fmi2_proto_GetXXX,
        __Marshaller_fmi2_proto_GetStringReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.EnterInitializationMode, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2EnterInitializationMode = new grpc::Method<global::schemas.Fmi2Proto.EnterInitializationMode, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2EnterInitializationMode",
        __Marshaller_fmi2_proto_EnterInitializationMode,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.ExitInitializationMode, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2ExitInitializationMode = new grpc::Method<global::schemas.Fmi2Proto.ExitInitializationMode, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2ExitInitializationMode",
        __Marshaller_fmi2_proto_ExitInitializationMode,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.Terminate, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2Terminate = new grpc::Method<global::schemas.Fmi2Proto.Terminate, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2Terminate",
        __Marshaller_fmi2_proto_Terminate,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.Reset, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2Reset = new grpc::Method<global::schemas.Fmi2Proto.Reset, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2Reset",
        __Marshaller_fmi2_proto_Reset,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetupExperiment, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetupExperiment = new grpc::Method<global::schemas.Fmi2Proto.SetupExperiment, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetupExperiment",
        __Marshaller_fmi2_proto_SetupExperiment,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.FreeInstance, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2FreeInstance = new grpc::Method<global::schemas.Fmi2Proto.FreeInstance, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2FreeInstance",
        __Marshaller_fmi2_proto_FreeInstance,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SetDebugLogging, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2SetDebugLogging = new grpc::Method<global::schemas.Fmi2Proto.SetDebugLogging, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2SetDebugLogging",
        __Marshaller_fmi2_proto_SetDebugLogging,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.DoStep, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2DoStep = new grpc::Method<global::schemas.Fmi2Proto.DoStep, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2DoStep",
        __Marshaller_fmi2_proto_DoStep,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.CancelStep, global::schemas.Fmi2Proto.StatusReturn> __Method_Fmi2CancelStep = new grpc::Method<global::schemas.Fmi2Proto.CancelStep, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Fmi2CancelStep",
        __Marshaller_fmi2_proto_CancelStep,
        __Marshaller_fmi2_proto_StatusReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.SerializeMessage, global::schemas.Fmi2Proto.SerializeReturn> __Method_Serialize = new grpc::Method<global::schemas.Fmi2Proto.SerializeMessage, global::schemas.Fmi2Proto.SerializeReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Serialize",
        __Marshaller_fmi2_proto_SerializeMessage,
        __Marshaller_fmi2_proto_SerializeReturn);

    static readonly grpc::Method<global::schemas.Fmi2Proto.DeserializeMessage, global::schemas.Fmi2Proto.StatusReturn> __Method_Deserialize = new grpc::Method<global::schemas.Fmi2Proto.DeserializeMessage, global::schemas.Fmi2Proto.StatusReturn>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Deserialize",
        __Marshaller_fmi2_proto_DeserializeMessage,
        __Marshaller_fmi2_proto_StatusReturn);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::schemas.Fmi2Proto.UnifmuFmi2Reflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of SendCommand</summary>
    [grpc::BindServiceMethod(typeof(SendCommand), "BindService")]
    public abstract partial class SendCommandBase
    {
      /// <summary>
      /// Set and Get variable value methods
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetReal(global::schemas.Fmi2Proto.SetReal request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.GetRealReturn> Fmi2GetReal(global::schemas.Fmi2Proto.GetXXX request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetInteger(global::schemas.Fmi2Proto.SetInteger request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.GetIntegerReturn> Fmi2GetInteger(global::schemas.Fmi2Proto.GetXXX request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetBoolean(global::schemas.Fmi2Proto.SetBoolean request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.GetBooleanReturn> Fmi2GetBoolean(global::schemas.Fmi2Proto.GetXXX request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetString(global::schemas.Fmi2Proto.SetString request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.GetStringReturn> Fmi2GetString(global::schemas.Fmi2Proto.GetXXX request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 2.1.6 Initialization, termination and resetting fmus
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2EnterInitializationMode(global::schemas.Fmi2Proto.EnterInitializationMode request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2ExitInitializationMode(global::schemas.Fmi2Proto.ExitInitializationMode request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2Terminate(global::schemas.Fmi2Proto.Terminate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2Reset(global::schemas.Fmi2Proto.Reset request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetupExperiment(global::schemas.Fmi2Proto.SetupExperiment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creation, destruction and logging of fmu instances
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2FreeInstance(global::schemas.Fmi2Proto.FreeInstance request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetDebugLogging(global::schemas.Fmi2Proto.SetDebugLogging request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 4.2.2 Computation
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2DoStep(global::schemas.Fmi2Proto.DoStep request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Fmi2CancelStep(global::schemas.Fmi2Proto.CancelStep request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.SerializeReturn> Serialize(global::schemas.Fmi2Proto.SerializeMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::schemas.Fmi2Proto.StatusReturn> Deserialize(global::schemas.Fmi2Proto.DeserializeMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SendCommand</summary>
    public partial class SendCommandClient : grpc::ClientBase<SendCommandClient>
    {
      /// <summary>Creates a new client for SendCommand</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SendCommandClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SendCommand that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SendCommandClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SendCommandClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SendCommandClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Set and Get variable value methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetReal(global::schemas.Fmi2Proto.SetReal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetReal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set and Get variable value methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetReal(global::schemas.Fmi2Proto.SetReal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetReal, null, options, request);
      }
      /// <summary>
      /// Set and Get variable value methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetRealAsync(global::schemas.Fmi2Proto.SetReal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetRealAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set and Get variable value methods
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetRealAsync(global::schemas.Fmi2Proto.SetReal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetReal, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.GetRealReturn Fmi2GetReal(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetReal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.GetRealReturn Fmi2GetReal(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2GetReal, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetRealReturn> Fmi2GetRealAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetRealAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetRealReturn> Fmi2GetRealAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2GetReal, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetInteger(global::schemas.Fmi2Proto.SetInteger request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetInteger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetInteger(global::schemas.Fmi2Proto.SetInteger request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetInteger, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetIntegerAsync(global::schemas.Fmi2Proto.SetInteger request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetIntegerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetIntegerAsync(global::schemas.Fmi2Proto.SetInteger request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetInteger, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.GetIntegerReturn Fmi2GetInteger(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetInteger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.GetIntegerReturn Fmi2GetInteger(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2GetInteger, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetIntegerReturn> Fmi2GetIntegerAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetIntegerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetIntegerReturn> Fmi2GetIntegerAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2GetInteger, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetBoolean(global::schemas.Fmi2Proto.SetBoolean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetBoolean(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetBoolean(global::schemas.Fmi2Proto.SetBoolean request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetBoolean, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetBooleanAsync(global::schemas.Fmi2Proto.SetBoolean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetBooleanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetBooleanAsync(global::schemas.Fmi2Proto.SetBoolean request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetBoolean, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.GetBooleanReturn Fmi2GetBoolean(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetBoolean(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.GetBooleanReturn Fmi2GetBoolean(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2GetBoolean, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetBooleanReturn> Fmi2GetBooleanAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetBooleanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetBooleanReturn> Fmi2GetBooleanAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2GetBoolean, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetString(global::schemas.Fmi2Proto.SetString request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetString(global::schemas.Fmi2Proto.SetString request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetString, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetStringAsync(global::schemas.Fmi2Proto.SetString request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetStringAsync(global::schemas.Fmi2Proto.SetString request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetString, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.GetStringReturn Fmi2GetString(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.GetStringReturn Fmi2GetString(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2GetString, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetStringReturn> Fmi2GetStringAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2GetStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.GetStringReturn> Fmi2GetStringAsync(global::schemas.Fmi2Proto.GetXXX request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2GetString, null, options, request);
      }
      /// <summary>
      /// 2.1.6 Initialization, termination and resetting fmus
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2EnterInitializationMode(global::schemas.Fmi2Proto.EnterInitializationMode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2EnterInitializationMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 2.1.6 Initialization, termination and resetting fmus
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2EnterInitializationMode(global::schemas.Fmi2Proto.EnterInitializationMode request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2EnterInitializationMode, null, options, request);
      }
      /// <summary>
      /// 2.1.6 Initialization, termination and resetting fmus
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2EnterInitializationModeAsync(global::schemas.Fmi2Proto.EnterInitializationMode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2EnterInitializationModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 2.1.6 Initialization, termination and resetting fmus
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2EnterInitializationModeAsync(global::schemas.Fmi2Proto.EnterInitializationMode request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2EnterInitializationMode, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2ExitInitializationMode(global::schemas.Fmi2Proto.ExitInitializationMode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2ExitInitializationMode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2ExitInitializationMode(global::schemas.Fmi2Proto.ExitInitializationMode request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2ExitInitializationMode, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2ExitInitializationModeAsync(global::schemas.Fmi2Proto.ExitInitializationMode request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2ExitInitializationModeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2ExitInitializationModeAsync(global::schemas.Fmi2Proto.ExitInitializationMode request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2ExitInitializationMode, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2Terminate(global::schemas.Fmi2Proto.Terminate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2Terminate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2Terminate(global::schemas.Fmi2Proto.Terminate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2Terminate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2TerminateAsync(global::schemas.Fmi2Proto.Terminate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2TerminateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2TerminateAsync(global::schemas.Fmi2Proto.Terminate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2Terminate, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2Reset(global::schemas.Fmi2Proto.Reset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2Reset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2Reset(global::schemas.Fmi2Proto.Reset request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2Reset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2ResetAsync(global::schemas.Fmi2Proto.Reset request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2ResetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2ResetAsync(global::schemas.Fmi2Proto.Reset request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2Reset, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetupExperiment(global::schemas.Fmi2Proto.SetupExperiment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetupExperiment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetupExperiment(global::schemas.Fmi2Proto.SetupExperiment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetupExperiment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetupExperimentAsync(global::schemas.Fmi2Proto.SetupExperiment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetupExperimentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetupExperimentAsync(global::schemas.Fmi2Proto.SetupExperiment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetupExperiment, null, options, request);
      }
      /// <summary>
      /// Creation, destruction and logging of fmu instances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2FreeInstance(global::schemas.Fmi2Proto.FreeInstance request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2FreeInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creation, destruction and logging of fmu instances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2FreeInstance(global::schemas.Fmi2Proto.FreeInstance request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2FreeInstance, null, options, request);
      }
      /// <summary>
      /// Creation, destruction and logging of fmu instances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2FreeInstanceAsync(global::schemas.Fmi2Proto.FreeInstance request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2FreeInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creation, destruction and logging of fmu instances
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2FreeInstanceAsync(global::schemas.Fmi2Proto.FreeInstance request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2FreeInstance, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetDebugLogging(global::schemas.Fmi2Proto.SetDebugLogging request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetDebugLogging(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2SetDebugLogging(global::schemas.Fmi2Proto.SetDebugLogging request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2SetDebugLogging, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetDebugLoggingAsync(global::schemas.Fmi2Proto.SetDebugLogging request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2SetDebugLoggingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2SetDebugLoggingAsync(global::schemas.Fmi2Proto.SetDebugLogging request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2SetDebugLogging, null, options, request);
      }
      /// <summary>
      /// 4.2.2 Computation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2DoStep(global::schemas.Fmi2Proto.DoStep request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2DoStep(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 4.2.2 Computation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2DoStep(global::schemas.Fmi2Proto.DoStep request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2DoStep, null, options, request);
      }
      /// <summary>
      /// 4.2.2 Computation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2DoStepAsync(global::schemas.Fmi2Proto.DoStep request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2DoStepAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 4.2.2 Computation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2DoStepAsync(global::schemas.Fmi2Proto.DoStep request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2DoStep, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2CancelStep(global::schemas.Fmi2Proto.CancelStep request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2CancelStep(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Fmi2CancelStep(global::schemas.Fmi2Proto.CancelStep request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Fmi2CancelStep, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2CancelStepAsync(global::schemas.Fmi2Proto.CancelStep request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Fmi2CancelStepAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> Fmi2CancelStepAsync(global::schemas.Fmi2Proto.CancelStep request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Fmi2CancelStep, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.SerializeReturn Serialize(global::schemas.Fmi2Proto.SerializeMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Serialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.SerializeReturn Serialize(global::schemas.Fmi2Proto.SerializeMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Serialize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.SerializeReturn> SerializeAsync(global::schemas.Fmi2Proto.SerializeMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SerializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.SerializeReturn> SerializeAsync(global::schemas.Fmi2Proto.SerializeMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Serialize, null, options, request);
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Deserialize(global::schemas.Fmi2Proto.DeserializeMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Deserialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::schemas.Fmi2Proto.StatusReturn Deserialize(global::schemas.Fmi2Proto.DeserializeMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Deserialize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> DeserializeAsync(global::schemas.Fmi2Proto.DeserializeMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeserializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::schemas.Fmi2Proto.StatusReturn> DeserializeAsync(global::schemas.Fmi2Proto.DeserializeMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Deserialize, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SendCommandClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SendCommandClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SendCommandBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Fmi2SetReal, serviceImpl.Fmi2SetReal)
          .AddMethod(__Method_Fmi2GetReal, serviceImpl.Fmi2GetReal)
          .AddMethod(__Method_Fmi2SetInteger, serviceImpl.Fmi2SetInteger)
          .AddMethod(__Method_Fmi2GetInteger, serviceImpl.Fmi2GetInteger)
          .AddMethod(__Method_Fmi2SetBoolean, serviceImpl.Fmi2SetBoolean)
          .AddMethod(__Method_Fmi2GetBoolean, serviceImpl.Fmi2GetBoolean)
          .AddMethod(__Method_Fmi2SetString, serviceImpl.Fmi2SetString)
          .AddMethod(__Method_Fmi2GetString, serviceImpl.Fmi2GetString)
          .AddMethod(__Method_Fmi2EnterInitializationMode, serviceImpl.Fmi2EnterInitializationMode)
          .AddMethod(__Method_Fmi2ExitInitializationMode, serviceImpl.Fmi2ExitInitializationMode)
          .AddMethod(__Method_Fmi2Terminate, serviceImpl.Fmi2Terminate)
          .AddMethod(__Method_Fmi2Reset, serviceImpl.Fmi2Reset)
          .AddMethod(__Method_Fmi2SetupExperiment, serviceImpl.Fmi2SetupExperiment)
          .AddMethod(__Method_Fmi2FreeInstance, serviceImpl.Fmi2FreeInstance)
          .AddMethod(__Method_Fmi2SetDebugLogging, serviceImpl.Fmi2SetDebugLogging)
          .AddMethod(__Method_Fmi2DoStep, serviceImpl.Fmi2DoStep)
          .AddMethod(__Method_Fmi2CancelStep, serviceImpl.Fmi2CancelStep)
          .AddMethod(__Method_Serialize, serviceImpl.Serialize)
          .AddMethod(__Method_Deserialize, serviceImpl.Deserialize).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SendCommandBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Fmi2SetReal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetReal, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetReal));
      serviceBinder.AddMethod(__Method_Fmi2GetReal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetRealReturn>(serviceImpl.Fmi2GetReal));
      serviceBinder.AddMethod(__Method_Fmi2SetInteger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetInteger, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetInteger));
      serviceBinder.AddMethod(__Method_Fmi2GetInteger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetIntegerReturn>(serviceImpl.Fmi2GetInteger));
      serviceBinder.AddMethod(__Method_Fmi2SetBoolean, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetBoolean, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetBoolean));
      serviceBinder.AddMethod(__Method_Fmi2GetBoolean, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetBooleanReturn>(serviceImpl.Fmi2GetBoolean));
      serviceBinder.AddMethod(__Method_Fmi2SetString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetString, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetString));
      serviceBinder.AddMethod(__Method_Fmi2GetString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.GetXXX, global::schemas.Fmi2Proto.GetStringReturn>(serviceImpl.Fmi2GetString));
      serviceBinder.AddMethod(__Method_Fmi2EnterInitializationMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.EnterInitializationMode, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2EnterInitializationMode));
      serviceBinder.AddMethod(__Method_Fmi2ExitInitializationMode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.ExitInitializationMode, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2ExitInitializationMode));
      serviceBinder.AddMethod(__Method_Fmi2Terminate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.Terminate, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2Terminate));
      serviceBinder.AddMethod(__Method_Fmi2Reset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.Reset, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2Reset));
      serviceBinder.AddMethod(__Method_Fmi2SetupExperiment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetupExperiment, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetupExperiment));
      serviceBinder.AddMethod(__Method_Fmi2FreeInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.FreeInstance, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2FreeInstance));
      serviceBinder.AddMethod(__Method_Fmi2SetDebugLogging, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SetDebugLogging, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2SetDebugLogging));
      serviceBinder.AddMethod(__Method_Fmi2DoStep, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.DoStep, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2DoStep));
      serviceBinder.AddMethod(__Method_Fmi2CancelStep, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.CancelStep, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Fmi2CancelStep));
      serviceBinder.AddMethod(__Method_Serialize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.SerializeMessage, global::schemas.Fmi2Proto.SerializeReturn>(serviceImpl.Serialize));
      serviceBinder.AddMethod(__Method_Deserialize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::schemas.Fmi2Proto.DeserializeMessage, global::schemas.Fmi2Proto.StatusReturn>(serviceImpl.Deserialize));
    }

  }
}
#endregion
